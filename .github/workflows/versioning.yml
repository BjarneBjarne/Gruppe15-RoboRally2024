name: Versioning

on:
  push:
    branches:
      - main
      - dev
      - '**'
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1 --grep="^v[0-9]\+\.[0-9]\+\.[0-9]\+-alpha$"))
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Determine increment type
        id: increment_type
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "increment_type=major" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "increment_type=minor" >> $GITHUB_ENV
          else
            echo "increment_type=patch" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          latest_tag=${{ env.latest_tag }}
          increment_type=${{ env.increment_type }}
          if [[ $latest_tag =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-.+)?$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            suffix=${BASH_REMATCH[4]}
          
            if [[ $increment_type == "major" ]]; then
              new_major=$((major + 1))
              new_version="v$new_major.0.0$suffix"
            elif [[ $increment_type == "minor" ]]; then
              new_minor=$((minor + 1))
              new_version="v$major.$new_minor.0$suffix"
            else
              new_patch=$((patch + 1))
              new_version="v$major.$minor.$new_patch$suffix"
            fi
          
            echo "New version: $new_version"
            echo "new_version=$new_version" >> $GITHUB_ENV
          else
            echo "Invalid tag format. Expected format: v<major>.<minor>.<patch>[-suffix]"
            exit 1
          fi

      - name: Log debug info
        run: |
          echo "Latest tag: ${{ env.latest_tag }}"
          echo "Increment type: ${{ env.increment_type }}"
          echo "New version: ${{ env.new_version }}"

      - name: Update version file
        run: echo "version=${{ env.new_version }}" > roborally/version

      - name: Commit version increment
        run: |
          git add roborally/version
          git commit -m "Increment version to ${{ env.new_version }}"
          git push origin HEAD

      - name: Create new tag
        run: |
          git tag -a ${{ env.new_version }} -m "Release ${{ env.new_version }}"
          git push origin ${{ env.new_version }}
